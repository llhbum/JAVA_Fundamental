public class Generic {
    public static void main(String[] args) {
        /*

         ** 제너릭의 개념
            * 제네릭이란?
                - 자바에서 제네릭이란 데이터 타입을 일반화한다는 것을 의미합니다.
                - 제네릭은 클래스나 메소드에서 사용할 내부 데이터 타입을 컴파일 시에 미리 지정하는 방법입니다.
                - 이렇게 컴파일 시에 미리 타입 검사를 수행하면 다음과 같은 장점을 가집니다.

                - 1. 클래스나 메소드 내부에서 사용되는 객체의 타입 안정성을 높일 수 있습니다.
                - 2. 반환값에 대한 타입 변환 및 타입 검사에 들어가는 노력을 줄일 수 있습니다.

                - JDK1.5 이전에서는 여러 타입을 사용하는 대부분의 클래스나 메소드에서 인수나 반환값으로 Object 타입을 사용했습니다.
                - 하지만 이 경우네는 반환된 Object 객체를 다시 원하는 타입으로 타입 변환해야 하며, 이떄 오류가 발생할 가능성도 존재합니다.
                - 하지만 JDK 1.5부터 도입된 제너릭을 사용하면 컴파일 시에 미리 타입이 정해지므로, 타입 검사나 타입 변환과 같은 번거로운 작업을 생략할 수 있게 됩니다.

            * 제네릭의 선언 및 생성
                - 자바에서 제네릭은 클래스와 메소드에만 다음과 같은 방법으로 선언할 수 있습니다.

                - 위의 예제에서 사용된 'T' 타입 변수라고 하며, 임의의 참조형 타입을 의미합니다.
                - 꼭 'T' 뿐만 아니라 어떠한 문제를 사용해도 상관없으며, 여러 개의 타입 변수는 쉼표로 구분하여 명시할 수 있습니다.
                - 타입 변수는 클래스에서 뿐만 아니라 메소드의 매개변수나 반환값으로도 사용할 수 있습니다.

                - 위와 같이 선언된 제네릭 클래스를 생성할 때에는 타입변수 자리에 사용할 실제 타입을 명시해야 합니다.

                - 위의 예제는 MyArray 클래스에 사용된 타입 변수로 Integer 타입을 사용하는 예제입니다.
                - 위처럼 제네릭 클래스를 생성할 떄 사용할 실제 타입을 명시하면, 내부적으로는 정의된 타입 변수가 명시된 실제 타입으로 변환되어 처리됩니다.

                - 또한 Java SE 7부터 인스턴스 생성 시 타입을 추정할 수 있는 경우에는 타입을 생략할 수 있습니다.

                -

            * 제네릭의 제거 시기
                - 자바 코드에서 선언되고 사용된 제네릭 타입은 컴파일 시 컴파일러에 의해 자동으로 검사되어 타입 변환됩니다.
                - 그리고서 코드 내의 모든 제네릭 타입은 제거되어, 컴파일된 class 파일에는 어떤한 제네릭 타입도 포함되지 않게 됩니다.
                - 이런 식으로 동작하는 이유는 제네릭을 사용하지 않는 코드와의 호환성을 유지하기 위해서 입니다.

         ** 다양한 제네릭 표현
            * 타입 변수의 제한
                - 제네릭은 'T'와 같은 타입 변수를 사용하여 타입을 제한합니다.
                - 이떄 extends 키워드를 사용하면 타입 변수에 특정 타입만을 사용하도록 제한할 수 있습니다.

                - 위와 같이 클래스의 타입 변수에 제한을 걸어 놓으면 클래스 내부에서 사용된 모든 타입 변수에 제한이 걸립니다.
                - 이떄에는 클래스가 아닌 인터페이스를 구현할 경우에는 implements 키워드가 아닌 extends 키워드를 사용해야만 합니다.

            * 제네릭 메소드
                - 제네릭 메소드란 메소드의 선언부에 타입 변수를 사용한 메소드를 의미합니다.
                - 이때 타입 변수의 선언은 메소드 선언부에서 반환 타입 바로 앞에 위치합니다.

            * 와일드카드의 사용
                - 와일드카드란 이름에 제한을 두지 않음을 표현하는 데 사용되는 기호를 의미합니다.
                - 자바의 제네릭에서는 물음표(?) 기호를 사용하여 이러한 와일드카드를 사용할 수 있습니다.

         */
    }
}
